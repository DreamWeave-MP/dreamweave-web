{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Mod Database",
  "type": "object",
  "propertyNames": {
    "enum": [
      "Decor",
      "Gameplay",
      "Music",
      "Total Conversions",
      "Weapons"
    ]
  },
  "patternProperties": {
    "^[a-zA-Z0-9;:\\-_ ]+$": {
      "type": "object",
      "title": "Mod",
      "description": "The category to which mods following it belong. This is used to determine the root subdirectory used by this particular mod in DW-Web *and* during openmw.cfg generation",
      "patternProperties": {
        "^[a-zA-Z0-9;:\\-_ ]+$": {
          "type": "object",
          "description": "Comprehensive definition of how a given mod interacts with the engine. It encompasses everything *except* sequencing, as this is meant to occur on a list-specific basis and/or be handled by LOOT.",
          "properties": {
            "non_nexus_meta": {
              "type": "object",
              "description": "Hardcoded metadata for mods which are not hosted on nexus and thus cannot necessarily have some information retrieved in an automated fashion.",
              "properties": {
                "author": {
                  "type": "string",
                  "description": "Individual or team responsible for making this mod"
                },
                "description": {
                  "type": "string"
                },
                "picture_url": {
                  "type": "string",
                  "description": "Optional field which provides an image for the mod page"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The page from which a mod is served. Note that this is more for discovery purposes and is NOT the direct download url for a given archive."
                }
              },
              "required": [
                "author",
                "description",
                "url"
              ]
            },
            "localizations": {
              "type": "object",
              "description": "Map of country codes to localized versions of this mod. A special value of `Bundled` for the country code indicates that this is a Lua mod with baked-in support for a given language.",
              "propertyNames": {
                "enum": [
                  "ar",
                  "de",
                  "en",
                  "es",
                  "fr",
                  "it",
                  "ja",
                  "ko",
                  "pl",
                  "pt",
                  "ru",
                  "sv",
                  "zh"
                ]
              },
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string",
                    "pattern": "^[^B].*|^B(?!undled$).*",
                    "description": "Name of the mod that provides this localization"
                  },
                  {
                    "const": "Bundled",
                    "description": "Indicates the mod has built-in Lua localization for this language"
                  }
                ]
              }
            },
            "nexus_mod_id": {
              "type": "integer",
              "description": "This option may be used in lieu of a direct page url for mods hosted on Nexus. The displayed pages are richer due to the simpler templating format."
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Armor",
                  "Arktwend",
                  "Asset-Only Replacer",
                  "Bugfix",
                  "Creatures",
                  "Customizaton",
                  "Doors of Oblivion",
                  "Expansion",
                  "Gameplay",
                  "Gear",
                  "Graphics",
                  "Housing",
                  "Immersion",
                  "Interface",
                  "Lore-Friendly",
                  "May Modathon 2020",
                  "May Modathon 2021",
                  "May Modathon 2022",
                  "May Modathon 2023",
                  "May Modathon 2024",
                  "May Modathon 2025",
                  "Mesh Replacer",
                  "Modding Madness 2020",
                  "Modding Madness 2021",
                  "Modding Madness 2022",
                  "Modding Madness 2023",
                  "Modding Madness 2024",
                  "Modding Madness 2025",
                  "Music",
                  "New Mechanics",
                  "NPCs",
                  "OAAB",
                  "O.C.R.E",
                  "OpenMW-Lua",
                  "Overhaul",
                  "Performance",
                  "Quest",
                  "Sound",
                  "Starwind",
                  "Summer ModJam 2020",
                  "Summer ModJam 2021",
                  "Summer ModJam 2022",
                  "Summer ModJam 2023",
                  "Summer ModJam 2024",
                  "Summer ModJam 2025",
                  "Tamriel Data",
                  "Textures",
                  "Upscale",
                  "Total Conversions",
                  "Translation",
                  "User Interface",
                  "Utility",
                  "Video",
                  "Weapons"
                ]
              },
              "minItems": 3,
              "uniqueItems": true
            },
            "version": {
              "type": "string"
            },
            "configurations": {
              "type": "object",
              "description": "Map of modlist names to configurations associated with the mod. The minimum requirement is either a single data directory, or a config directory, but this also includes content files, groundcover entries, and adjustments to openmw.cfg (fallback=) and settings.cfg. The special `provides` list indicates all possible configurations a mod provides and isn't necessarily sane.",
              "propertyNames": {
                "enum": [
                  "iHeartVanilla",
                  "sw0rdsinger",
                  "provides"
                ]
              },
              "patternProperties": {
                "^(?!provides$).*$": {
                  "type": "object",
                  "title": "archive",
                  "description": "Modlist-specfic configurations for this mod. The `provides` modlist is a special value which is only displayed on the mod's specific page. It refers to all configurations that may be provided by a mod, and may or may not even contain sane values.",
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "description": "This field indicates the name of a given archive associated with a mod. For example, a given mod on Nexus, may have multiple required downloads, even though they are both from the same mod. This field's name should correlate directly to each downloaded file from NexusMods.",
                      "additionalProperties": false,
                      "properties": {
                        "additionalProperties": false,
                        "config": {
                          "type": "array",
                          "description": "Relative path to a configuration directory provided by this mod",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directories": {
                          "type": "array",
                          "description": "Data directories used by a particular mod. At least one data directory is required, and it is the only required configuration type for every mod. Additionally, by using an object instead of a string, dependences for specific data directories may be defined. Content files and groundcover entries are also children of data directories, since they must exist inside the root of one. A value of . means that relevant files exist at the root of the archive.",
                          "items": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "patternProperties": {
                                  "^.*$": {
                                    "type": "object",
                                    "properties": {
                                      "content_files": {
                                        "description": "Plugins used by a mod, eg ESP, ESM, omwaddon, and omwscripts files. Additionally, by using an object instead of a string, dependences for specific data directories may be defined.",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "pattern": "\\.(esp|esm|omwaddon|omwscripts)$",
                                          "patternErrorMessage": "Must end with .esp, .esm, .omwaddon, or .omwscripts"
                                        }
                                      },
                                      "groundcover": {
                                        "description": "Groundcover plugins used by a mod, eg ESP, ESM, and omwaddon files.",
                                        "type": "array",
                                        "items": {
                                          "description": "In the same sequence as defined in the plugin's TES3 header, each field of this array defines a groundcover plugin that this one depends upon. Very unusual for groundcover plugins, but possible.",
                                          "type": "string",
                                          "pattern": "\\.(esp|esm|omwaddon)$",
                                          "patternErrorMessage": "Must end with .esp, .esm, or .omwaddon."
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "maxProperties": 1
                              }
                            ]
                          }
                        },
                        "fallbacks": {
                          "type": "object",
                          "description": "Set of openmw.cfg edits made by a given mod, such as changing UI colors or font. No validation is provided for these fields!"
                        },
                        "settings": {
                          "type": "object",
                          "description": "Alterations to settings.cfg provided by a given mod.",
                          "propertyNames": {
                            "enum": [
                              "Camera",
                              "Cells",
                              "Fog",
                              "Groundcover",
                              "Input",
                              "Map",
                              "GUI",
                              "HUD",
                              "Game",
                              "General",
                              "Lua",
                              "Models",
                              "Navigator",
                              "Physics",
                              "Post Processing",
                              "Saves",
                              "Shaders",
                              "Shadows",
                              "Sound",
                              "Stereo",
                              "Stereo View",
                              "Terrain",
                              "Video",
                              "Water",
                              "Windows"
                            ]
                          }
                        },
                        "use_default": {
                          "const": "true",
                          "description": "If this field is used, then it means that the modlist does not have special configuration requirements and the configurations from the `provides` special list will be used."
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "directories"
                          ]
                        },
                        {
                          "required": [
                            "config"
                          ]
                        },
                        {
                          "required": [
                            "use_default"
                          ]
                        }
                      ]
                    }
                  }
                },
                "^provides$": {
                  "type": "object",
                  "title": "archive",
                  "description": "Modlist-specfic configurations for this mod. The `provides` modlist is a special value which is only displayed on the mod's specific page. It refers to all configurations that may be provided by a mod, and may or may not even contain sane values.",
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "description": "This field indicates the name of a given archive associated with a mod. For example, a given mod on Nexus, may have multiple required downloads, even though they are both from the same mod. This field's name should correlate directly to each downloaded file from NexusMods.",
                      "additionalProperties": false,
                      "properties": {
                        "additionalProperties": false,
                        "direct_download": {
                          "type": "string",
                          "description": "This field indicates the actual direct download link for a mod, if available. Mods posted on nexus do not support this."
                        },
                        "extract_to": {
                          "type": "string",
                          "description": "If this field is present, it will be used in place of the archive name as the extraction directory. Useful for shortening long paths."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of this specific archive, which may or may not be the same as the actual mod version in the case of mods with multiple archives. If the version field of an archive is not present, it is assumed to be the same as the top-level mod version."
                        },
                        "duplicate": {
                          "type": "array",
                          "description": "This field is used in order to handle instances where one mod has two nexus archives by the same name. The file IDs and extraction paths must be provided.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nexus_file_id": {
                                "type": "integer",
                                "description": "A specific nexus fileID associated with this archive. Only use when multiple nexus files by identical names exist!"
                              },
                              "extract_to": {
                                "type": "string",
                                "description": "Path to which this specific archive should be extracted. If no duplicates are present the archive name is used as the extraction directory."
                              }
                            },
                            "description": "This field is used when a duplicate file name exists for a nexus mod. This specifies an explicit nexus file id and a directory to which this mod should be extracted. If there are no duplicates, the archive name is used during extraction."
                          },
                          "required": [
                            "nexus_file_id",
                            "extract_to"
                          ]
                        },
                        "actions": {
                          "type": "array",
                          "description": "Special actions that need be taken to install a particular mod on a list-specific basis. These actions include copying, moving, or deleting files, cleaning with tes3cmd, or any other arbitrary tes3cmd actions. Note that `lists` is an optional field - omitting it for a specific action indicates it is used on all lists.",
                          "items": {
                            "type": "object",
                            "oneOf": [
                              {
                                "properties": {
                                  "copy": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "source": {
                                          "type": "string"
                                        },
                                        "dest": {
                                          "type": "string"
                                        },
                                        "lists": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "dest"
                                      ],
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "required": [
                                  "copy"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "rename": {
                                    "type": "array",
                                    "description": "An array of source files to their new intended destinations. Both `source` and `dest` fields are paths relative to the mod list root directory, when installed.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "from": {
                                          "type": "string"
                                        },
                                        "to": {
                                          "type": "string"
                                        },
                                        "lists": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "from",
                                        "to"
                                      ],
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "required": [
                                  "rename"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "delete": {
                                    "type": "object",
                                    "properties": {
                                      "directories": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "minItems": 1
                                      },
                                      "files": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "minItems": 1
                                      },
                                      "lists": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "files"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "directories"
                                        ]
                                      }
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "delete"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "properties": {
                                  "tes3cmd": {
                                    "type": "array",
                                    "description": "Array of strings to concatenate and pass to tes3cmd. Each tes3cmd action is equivalent to using it in the command-line, omitting the actual path to the tes3cmd executable.",
                                    "items": {
                                      "type": "string",
                                      "description": "A single step in a tes3cmd chain, such as `delete` or `--exact-id`."
                                    },
                                    "minItems": 4
                                  }
                                },
                                "required": [
                                  "tes3cmd"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "config": {
                          "type": "array",
                          "description": "Relative path to a configuration directory provided by this mod",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directories": {
                          "type": "array",
                          "description": "Data directories used by a particular mod. At least one data directory is required, and it is the only required configuration type for every mod. Additionally, by using an object instead of a string, dependences for specific data directories may be defined. Content files and groundcover entries are also children of data directories, since they must exist inside the root of one. A value of . means that relevant files exist at the root of the archive.",
                          "items": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "patternProperties": {
                                  "^.*$": {
                                    "type": "object",
                                    "properties": {
                                      "depends": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "In the same sequence as intended to be written in OpenMW.cfg, each field of this array defines a data directory that this one depends upon. This is for cases where one mod needs a retexture or replacement mesh, etc, which it does not provide itself, such as Project Atlas' MET module depending on MET itself. It *may* be possible in some exceptional cases that a data directory depends on a plugin and may also be recorded here."
                                        }
                                      },
                                      "recommended": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "In the same sequence as intended to be written in OpenMW.cfg, each field of this array defines a data directory that this one recommends using. For example, S3maphore's MUSE expansion module may be used by itself or alongside any or all of the MUSE expansions."
                                        }
                                      },
                                      "content_files": {
                                        "description": "Plugins used by a mod, eg ESP, ESM, omwaddon, and omwscripts files. Additionally, by using an object instead of a string, dependences for specific data directories may be defined.",
                                        "type": "array",
                                        "items": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "pattern": "\\.(esp|esm|omwaddon|omwscripts)$",
                                              "patternErrorMessage": "Must end with .esp, .esm, .omwaddon, or .omwscripts"
                                            },
                                            {
                                              "type": "object",
                                              "patternProperties": {
                                                "^.*$": {
                                                  "type": "object",
                                                  "properties": {
                                                    "depends": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string",
                                                        "description": "In the same sequence as defined in the plugin's TES3 header, each field of this array defines a content file that this one depends upon.",
                                                        "pattern": "\\.(esp|esm|omwaddon|omwscripts)$",
                                                        "patternErrorMessage": "Must end with .esp, .esm, .omwaddon, or .omwscripts"
                                                      }
                                                    },
                                                    "recommended": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string",
                                                        "description": "Each field of this array defines a content file that is recommended to be used with this one, but not required.",
                                                        "pattern": "\\.(esp|esm|omwaddon|omwscripts)$",
                                                        "patternErrorMessage": "Must end with .esp, .esm, .omwaddon, or .omwscripts"
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "maxProperties": 1
                                            }
                                          ]
                                        }
                                      },
                                      "groundcover": {
                                        "description": "Groundcover plugins used by a mod, eg ESP, ESM, and omwaddon files.",
                                        "type": "array",
                                        "items": {
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "pattern": "\\.(esp|esm|omwaddon)$",
                                              "patternErrorMessage": "Must end with .esp, .esm, or .omwaddon."
                                            },
                                            {
                                              "type": "object",
                                              "patternProperties": {
                                                "^.*$": {
                                                  "type": "object",
                                                  "properties": {
                                                    "depends": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string",
                                                        "description": "In the same sequence as defined in the plugin's TES3 header, each field of this array defines a groundcover plugin that this one depends upon. Very unusual for groundcover plugins, but possible.",
                                                        "pattern": "\\.(esp|esm|omwaddon)$",
                                                        "patternErrorMessage": "Must end with .esp, .esm, or .omwaddon."
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "maxProperties": 1
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "maxProperties": 1
                              }
                            ]
                          }
                        },
                        "fallbacks": {
                          "type": "object",
                          "description": "Set of openmw.cfg edits made by a given mod, such as changing UI colors or font. No validation is provided for these fields!"
                        },
                        "settings": {
                          "type": "object",
                          "description": "Alterations to settings.cfg provided by a given mod.",
                          "propertyNames": {
                            "enum": [
                              "Camera",
                              "Cells",
                              "Fog",
                              "Groundcover",
                              "Input",
                              "Map",
                              "GUI",
                              "HUD",
                              "Game",
                              "General",
                              "Lua",
                              "Models",
                              "Navigator",
                              "Physics",
                              "Post Processing",
                              "Saves",
                              "Shaders",
                              "Shadows",
                              "Sound",
                              "Stereo",
                              "Stereo View",
                              "Terrain",
                              "Video",
                              "Water",
                              "Windows"
                            ]
                          }
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "directories"
                          ]
                        },
                        {
                          "required": [
                            "config"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "required": [
                "provides"
              ],
              "dependencies": {
                "use_default": {
                  "properties": {
                    "config": {
                      "maxItems": 0
                    },
                    "settings": {
                      "maxItems": 0
                    }
                  }
                }
              }
            }
          },
          "allOf": [
            {
              "required": [
                "tags",
                "version"
              ]
            },
            {
              "oneOf": [
                {
                  "required": [
                    "non_nexus_meta"
                  ]
                },
                {
                  "required": [
                    "nexus_mod_id"
                  ]
                }
              ]
            }
          ],
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}